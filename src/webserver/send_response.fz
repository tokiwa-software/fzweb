# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion webserver feature send_response
#
# -----------------------------------------------------------------------

# like its three-argument counterpart, but sends a blank response
#
module send_ok_or_reload (cmd String, s Session) response =>
  send_ok_or_reload cmd s ""


# send an HTTP 200 response with the given data if there is a session,
# and data can be send back over the session, otherwise, return a 500
# response and ask the client to reload
#
module send_ok_or_reload (cmd String, s Session, datastr String) response =>
  returncode := if !s.is_connection_ok then 500 else 200
  must_message := "must reconnect"
  data := if returncode = 500 then must_message.utf8.map (x->x.cast_to_i8) else datastr.utf8.map (x->x.cast_to_i8)
  data2 := data.as_array
  header := "Content-Length: {data2.length}\nContent-Type: text/html\n"
  response returncode header data2


# send an HTTP 200 response along with the given data
#
module send_ok (cmd String, datastr String) response =>
  data := (datastr.utf8.map (x->x.cast_to_i8)).as_array
  header := "Content-Length: {data.length}\nContent-Type: text/html\n"
  response 200 header data


# send an HTTP response provided a content identifier
#
module send_content (s Session, cmd String, i identifier) response =>
  # NYI: logging, mime types
  match i.get_bytes s
    b array u8 =>
      attributes := "Content-Length: {b.length}\n"
      response 200 attributes (b.map x->x.cast_to_i8)
    e error =>
      webserver.this.log s "*** error sending content: {e}"
      response 500 "" (list i8).empty


# send an HTTP response indicating that the content requested has not
# been sent due to a missing implementation in this webserver
#
module send_nyi response =>
  response 500 "" (list i8).empty
