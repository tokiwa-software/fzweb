# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion webserver feature run
#
# -----------------------------------------------------------------------

# run -- feature that starts up the Fuzion webserver
#
run =>

  port u16 := 8080
  # start the server
  res := net.server.start net.family.ipv4 net.protocol.tcp port ()->
    logger.log "started listening on port: $port"

    # global instance of webserver
    #
    webserver := webserver (lock_free.Map String Session).empty Runner


    # start a thread pool
    # NYI: UNDER DEVELOPMENT: thread_pool size should be determined programmatically
    concur.thread_pool 200 ()->

      # the request accept loop
      do
        accept_res := net.server.env.accept.bind unit conn->

          lm : mutate is

          _ := conn.in_thread_pool unit concur.thread_pool lm lm ()->
            fuzion.runtime.contract_fault
              .try ()->
                # NYI: PERFORMANCE: shared JVM for all threads?
                # start a JVM with CLASS_PATH=classes
                fuzion.jvm.use _ ["-Djava.class.path=classes"] ()->
                  webserver.handle_connection lm conn
              .catch  e->
                logger.log "contract_fault: $e"

        accept_res.or_else ()->
          logger.log "failed accepting connection {accept_res}"

  logger.log "some failure occurred: $res"
