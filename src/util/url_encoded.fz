# -----------------------------------------------------------------------
#
#  Tokiwa Software GmbH, Germany
#
#  Source code of Fuzion webserver feature url_encoded
#
# -----------------------------------------------------------------------

module url_encoded is


  # Parse URL-encoded form data into a map
  #
  module parse_urlencoded_map(data String) lock_free.Map String String =>

    pairs := data.split "&"
    form_data := lock_free.Map String String .empty
    for p in pairs do
      nv := p.split "="
      name := encodings.percent.decode_as_str nv[0] .val.trim
      _ := form_data.put name (nv.count < 2 ? "" : encodings.percent.decode_as_str nv[1] .val)
    form_data


  # Strip non-alphanumeric characters from a string
  #
  module strip_non_alpha_numeric(s String) String =>
    String
      .from_codepoints <| s
        .codepoints
        .map c->
          if c.is_ascii_alpha_num then c else "_"


  # html encode str
  #
  # mapping:
  #
  # " " => "&nbsp;"
  # "&" => "&amp;"
  # "<" => "&lt;"
  # ">" => "&gt;"
  # "\" => "&quot;"
  # "'" => "&#x27;"
  # "/" => "&#x2F;"
  #
  module html_encode(str String) String =>
    str
      .utf8
      .flat_map b->
        if      b=(" " ).val.as_u8 then "&nbsp;".utf8
        else if b=("&" ).val.as_u8 then "&amp;" .utf8
        else if b=("<" ).val.as_u8 then "&lt;"  .utf8
        else if b=(">" ).val.as_u8 then "&gt;"  .utf8
        else if b=("\"").val.as_u8 then "&quot;".utf8
        else if b=("'" ).val.as_u8 then "&#x27;".utf8
        else if b=("/" ).val.as_u8 then "&#x2F;".utf8
        else [b]
      .as_array
      |> String.type.from_bytes


